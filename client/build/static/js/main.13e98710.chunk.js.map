{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/helpers.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ADD_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","reducer","state","action","type","products","categories","currentCategory","cartOpen","cart","product","newState","filter","_id","length","map","purchaseQuantity","storeContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","console","log","useStoreContext","useContext","pluralize","name","count","ProductItem","item","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","e","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Cart","toggleCart","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","variables","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.13e98710.chunk.js","sourcesContent":["export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";","import {useReducer} from 'react';\r\n\r\nimport {\r\n    UPDATE_PRODUCTS,\r\n    UPDATE_CATEGORIES,\r\n    UPDATE_CURRENT_CATEGORY,\r\n    ADD_TO_CART,\r\n    ADD_MULTIPLE_TO_CART,\r\n    REMOVE_FROM_CART,\r\n    UPDATE_CART_QUANTITY,\r\n    CLEAR_CART,\r\n    TOGGLE_CART\r\n} from './actions';\r\n\r\nexport const reducer = (state, action) => {\r\n    switch(action.type){\r\n        // if action type value is the value `UPDATE_PRODUCTS`, return a new state object with an updated products array  \r\n      case UPDATE_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          products: [...action.products],\r\n        };\r\n\r\n      case UPDATE_CATEGORIES:\r\n        return {\r\n            ...state,\r\n            categories: [...action.categories]\r\n        };\r\n\r\n      case UPDATE_CURRENT_CATEGORY:\r\n        return {\r\n            ...state,\r\n            currentCategory: action.currentCategory\r\n        };\r\n\r\n      case ADD_TO_CART:\r\n        return {\r\n          ...state,\r\n          cartOpen: true,\r\n          cart: [...state.cart, action.product]\r\n        };\r\n\r\n      case ADD_MULTIPLE_TO_CART:\r\n        return {\r\n          ...state,\r\n          cart: [...state.cart, ...action.products],\r\n        };\r\n\r\n      case REMOVE_FROM_CART:\r\n        let newState = state.cart.filter(product => {\r\n          return product._id !== action._id;\r\n        });\r\n        return {\r\n          ...state,\r\n          cartOpen: newState.length > 0,\r\n          cart: newState\r\n        };\r\n    \r\n       case UPDATE_CART_QUANTITY:\r\n        return {\r\n          ...state,\r\n          cartOpen: true,\r\n          cart: state.cart.map(product => {\r\n            if(action._id === product._id) {\r\n              product.purchaseQuantity = action.purchaseQuantity;\r\n\r\n            }\r\n            return product;\r\n          })\r\n        }; \r\n\r\n      case CLEAR_CART: \r\n      return {\r\n          ...state,\r\n          cartOpen: false,\r\n          cart: []\r\n      };\r\n\r\n      case TOGGLE_CART: \r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen\r\n      };\r\n    // if non of these action return, donot update state at all and keep things same!\r\n   default:\r\n   return state;   \r\n}\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n    return useReducer(reducer, initialState);\r\n}","import React, { createContext, useContext  } from \"react\";\r\nimport { useProductReducer } from \"./reducers\";\r\n\r\nconst storeContext = createContext();\r\nconst {Provider} = storeContext;\r\n\r\nconst StoreProvider = ({value = [], ...props}) => {\r\n \r\n    const [state, dispatch] = useProductReducer({\r\n        products: [],\r\n        cart: [],\r\n        cartOpen: false,\r\n        categories: [],\r\n        currentCategory: '',\r\n    });\r\n  // use this to confirm it works\r\n  console.log(state);\r\n\r\n  return <Provider value = {[state, dispatch]} {...props} />;\r\n\r\n};\r\n\r\nconst useStoreContext = () => {\r\n    useContext(storeContext);\r\n}\r\n\r\nexport {StoreProvider, useStoreContext};","export function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY} from '../../utils/actions';\n// import CartItem from \"../CartItem\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext()\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state;\n\n  const addToCart = () => {\n    //find the cart item with the matching id\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\n    //if there was a match, call UPDATE with a new purchase quantity\n    if(itemInCart) {\n      dispatch ({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n\n    dispatch ({\n      type: ADD_TO_CART,\n      product: {...item, purchaseQuantity: 1}\n    });\n  }\n};\n\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, {useEffect} from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\n\nimport ProductItem from '../ProductItem';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [ state, dispatch] = useStoreContext();\n  const { currentCategory } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(()=>{\n    if(data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n    }\n  }, [data, dispatch]);\n\n  // const products = data?.products || [];\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, {useEffect} from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY} from '../../utils/actions';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n  const {categories} = state;\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n  // const categories = categoryData?.categories || [];\n\n  useEffect(()=> {\n  // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n  if(categoryData) {\n    // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to \n    dispatch({\n      type: UPDATE_CATEGORIES,\n      categories: categoryData.categories\n    });\n  }\n  }, [categoryData, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from \"react\";\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport {  REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\n\r\n\r\nconst CartItem = ({ item }) => {\r\n    const [, dispatch] = useStoreContext();\r\n\r\n    const removeFromCart = item => {\r\n        dispatch({\r\n            type: REMOVE_FROM_CART,\r\n            _id: item._id\r\n        });\r\n    };\r\n\r\n    const onChange = e => {\r\n        const value = e.target.value;\r\n\r\n        if(value === '0') {\r\n            dispatch({\r\n                type:REMOVE_FROM_CART,\r\n                _id: item._id,\r\n            });\r\n        } else {\r\n            dispatch ({\r\n                type: UPDATE_CART_QUANTITY,\r\n                _id: item._id,\r\n                purchaseQuantity: parseInt(value)\r\n\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex-row\">\r\n            <div>\r\n                <img\r\n                    src={`/image/${item.image}`}\r\n                    alt=\"\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <div>{item.name}, ${item.price}</div>\r\n                <div>\r\n                    <span>Qty:</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      placeholder=\"1\"\r\n                      value={item.purchaseQuantity}\r\n                      onChange={onChange}\r\n                    />\r\n                    <span role=\"img\" aria-label=\"trash\" onClick={()=>removeFromCart(item)}>\r\n                        🗑️\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { TOGGLE_CART } from \"../../utils/actions\";\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport './style.css';\r\n\r\nconst Cart = () => {\r\n    const [state, dispatch] = useStoreContext();\r\n    console.log(state);\r\n    function toggleCart() {\r\n        dispatch({ type: TOGGLE_CART });\r\n    };\r\n\r\n    function calculateTotal() {\r\n        let sum = 0;\r\n        state.cart.forEach(item => {\r\n            sum += item.price * item.purchaseQuantity;\r\n        });\r\n        return sum.toFixed(2);\r\n    };\r\n\r\n\r\n    if (!state.cartOpen) {\r\n        return (\r\n            <div className=\"cart-closed\" onClick={toggleCart}>\r\n                <span\r\n                    role=\"img\"\r\n                    aria-label=\"trash\">🛒</span>\r\n            </div>\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"cart\">\r\n            <div className=\"close\" onClick={toggleCart}>[close]</div>\r\n            <h2>Shopping Cart</h2>\r\n            {state.cart.length ? (\r\n                <div>\r\n                    {state.cart.map(item => (\r\n                        <CartItem key={item._id} item={item} />\r\n                    ))}\r\n                    <div className=\"flex-row space-between\">\r\n                        <strong>Total: ${calculateTotal()}</strong>\r\n                        {\r\n                            Auth.loggedIn() ?\r\n                                <button>\r\n                                    Checkout\r\n                                </button>\r\n                                :\r\n                                <span>(Log in to checkout)</span>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            ) : (\r\n                <h3>\r\n                    <span role='img' aria-label=\"shocked\">😱</span>\r\n                    You haven't added anything to your cart yet!\r\n                </h3>\r\n            )}\r\n\r\n        </div>   \r\n    );\r\n};\r\nexport default Cart;","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu/>\n      <ProductList/>\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\nimport { useStoreContext } from '../utils/GlobalState';\nimport Cart from '../components/Cart';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      })\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n  };\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n    }\n  }, [products, data, dispatch, id]);\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find(p => p._id === currentProduct._id)}\n              onClick={removeFromCart}>\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router,Routes, Route} from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n           <Nav />\n           <Routes>\n             <Route  path=\"/\" element={Home} />\n             <Route  path=\"/login\" element={Login} />\n             <Route  path=\"/signup\" element={Signup} />\n             <Route  path=\"/orderHistory\" element={OrderHistory} />\n             <Route  path=\"/products/:id\" element={Detail} />\n             <Route  path='*' element={NoMatch} />\n           </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}